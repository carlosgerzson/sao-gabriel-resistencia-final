/* style.css - Sugestões de Responsividade (Top-Aligned, Responsivo por Largura, Mantendo Proporção) */

/* Reset básico */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Configuração inicial de body e html */
body, html {
    margin: 0;
    padding: 0;
    overflow-x: hidden; /* Esconde barra de rolagem horizontal se o conteúdo for mais largo que a tela */
    overflow-y: auto; /* Permite barra de rolagem vertical se o conteúdo for mais alto que a tela */
    height: 100%; /* Garante que ocupem a altura total da viewport */
    background-color: rgb(234, 230, 230); /* Cor de fundo da página */
    /* Remove as propriedades flex de centralização usadas na tentativa anterior */
    display: block; /* Volta para o fluxo normal de bloco */
}

/* Container principal do jogo - Define a largura responsiva e centraliza horizontalmente */
#game-container {
    position: relative; /* Necessário para posicionamento absoluto de filhos */
    width: 100vw; /* Ocupa 100% da largura da viewport */
    max-width: 900px; /* Mas não excede a largura de design */
    height: auto; /* A altura será determinada pelo conteúdo escalado (#game) */
    margin: 0 auto; /* Centraliza o container horizontalmente na tela */
    background-color: black; /* Fundo para as "barras pretas" laterais se a largura for menor que 900px */
    overflow: hidden; /* Garante que nada escape visualmente deste container */
    /* Remove propriedades flex, volta para o fluxo normal */
    display: block;
}

/* A área do jogo com as dimensões de design (900x1600) - Será escalada */
#game {
    position: relative; /* Mantém-no como container para seus filhos absolutos */
    width: 900px; /* Largura BASE de design (em pixels) */
    height: 1600px; /* Altura BASE de design (em pixels - ajuste se a proporção for outra) */
    transform-origin: top left; /* Define o ponto de origem da transformação de escala (canto superior esquerdo) */

    /* NOTA IMPORTANTE: A PROPRIEDADE `transform: scale(...)` PRECISA SER APLICADA AQUI! */
    /* O valor da escala deve ser calculado com base na relação:
       (largura ATUAL do #game-container) / (largura BASE de design do #game = 900px)
       Ex: Se #game-container tiver 450px de largura, a escala é 450/900 = 0.5.
       Você aplicaria transform: scale(0.5);
       Isto é geralmente feito com JavaScript que calcula o valor dinamicamente
       ou pode ser feito manualmente com Media Queries para breakpoints específicos. */

    /* Exemplo de como ficaria a regra `transform` (Você PRECISA aplicá-la!): */
    /* transform: scale( calc( var(--container-width) / 900 ) );  <-- Exemplo com CSS Variable (requer JS para definir a var) */
    /* transform: scale(0.5); <-- Exemplo com valor fixo (usado em Media Queries) */

    /* Remova quaisquer outras propriedades de posicionamento (top, left, bottom, right) ou margem que possam interferir */
    top: auto;
    left: auto;
    margin: 0;

    /* overflow: hidden; para garantir que elementos internos não causem problemas visuais fora da área definida pelo #game. */
    overflow: hidden;
}

/* --- Estilos para elementos DENTRO do #game --- */
/* Elementos posicionados absolutamente DENTRO do #game (background, alvos, exército, carros, mísseis, etc.) */
/* DEVEM MANTER SUAS POSIÇÕES E DIMENSÕES EM PIXELS. */
/* Quando o #game for escalado com `transform: scale()`, estes elementos,
   posicionados em pixels dentro dele, escalarão junto automaticamente e manterão
   suas posições e tamanhos relativos dentro da área de jogo escalada.
   É CRUCIAL NÃO MUDAR AS UNIDADES DE PIXEL PARA ESTES ELEMENTOS. */

#background {
    position: absolute;
    width: 900px; /* Mantenha em pixels */
    height: 1600px; /* Mantenha em pixels */
    top: 0px; /* Mantenha em pixels */
    left: 0px; /* Mantenha em pixels */
    z-index: 1;
    pointer-events: all;
    /*display: none; */ /* Mantenha ou ajuste conforme a lógica do seu jogo */
}

#ford_t {
    position: absolute;
    width: 114px; /* Mantenha em pixels */
    height: 71px; /* Mantenha em pixels */
    top: 1520px; /* Mantenha em pixels */
    left: 732px; /* Mantenha em pixels */
    transform-origin: top left;
    z-index: 5;
}

/* ... (Continue para todos os outros elementos que usam position: absolute DENTRO do #game - army, pedestal, torre, missil, bomb, target, explosion, etc.) ... */
/* Exemplo genérico para elementos dentro do #game que são posicionados com pixels: */
.army, .missil, .bomb, #pedestal_d, #torre_c_e_d, #torre_e, .explosion, .explosion-area {
    position: absolute; /* Mantenha absolute */
    /* Mantenha width, height, top, left, bottom, right em PIXELS conforme seu design original */
    /* z-index: ; */ /* Verifique se os z-indexes fazem sentido com o #game escalado */
    /* transform-origin: ; */ /* Ajuste se o ponto de origem da transformação for importante */
    /* clip-path: ; */ /* Mantenha se necessário */
    /* display: none/block; */ /* Mantenha ou ajuste conforme a lógica do seu jogo */
    /* animation: ; */ /* Mantenha se necessário */
}


/* --- Estilos para elementos de UI FORA da área de jogo principal --- */
/* Elementos como placar, cronômetro, botões de controle/menu, etc. */
/* Devem ser posicionados ABSOLUTAMENTE em relação ao #game-container
   (que agora está top-aligned e com largura controlada)
   usando unidades responsivas (%, vw, vh, vmin) para se posicionarem e escalarem com a tela. */

#ui-container {
    position: absolute; /* Posicionado absolutamente em relação ao #game-container */
    top: 2vh; /* Exemplo: 2% da altura da viewport */
    left: 2vw; /* Exemplo: 2% da largura da viewport */
    z-index: 1000; /* Garante que fique acima de tudo */
    font-size: 2.5vmin; /* Exemplo: tamanho de fonte relativo à menor dimensão da viewport */
    color: #fed906;
    text-align: left;
    /* Outros estilos visuais do container, se necessário */
}

#cronometro {
    position: absolute; /* Posicionado absolutamente em relação ao #game-container */
    top: 2vh; /* Exemplo */
    left: 2vw; /* Exemplo */
    font-size: 2.5vmin; /* Exemplo */
    z-index: 890; /* Garante que fique acima do jogo principal */
    /* Adicione outros estilos */
}

#iniciar-jogo-btn {
    position: absolute; /* Posicionado absolutamente em relação ao #game-container */
    /* top: 60%; left: 50%; transform: translate(-50%, -50%); */ /* Isto já é relativamente responsivo e centraliza DENTRO DO CONTAINER */
    top: 60%; /* 60% da altura do #game-container */
    left: 50%; /* 50% da largura do #game-container */
    transform: translate(-50%, -50%); /* Centraliza o próprio botão */
    z-index: 900; /* Garante que fique acima do jogo */
    /* Adicione outros estilos */
}

#tela-fim-de-fase button#btn-voltar-mapa {
    /* Assumindo que #tela-fim-de-fase é filho direto do #game-container ou de um elemento que preenche o #game-container */
    position: absolute; /* Relativo ao container pai (#game-container ou #tela-fim-de-fase) */
    bottom: 5vh; /* Exemplo: 5% da altura da viewport */
    left: 50%; /* 50% da largura do container pai */
    transform: translateX(-50%); /* Centraliza o próprio botão horizontalmente */
    z-index: 20; /* Verifique se este z-index é suficiente para sobrepor a tela de fundo */
    /* Outros estilos visuais */
}

#game-info-topo {
    position: absolute; /* Posicionado absolutamente em relação ao #game-container */
    top: 2vh; /* Exemplo */
    left: 2vw; /* Exemplo */
    right: 2vw; /* Exemplo */
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: white;
    z-index: 890; /* Deve ser maior que o jogo principal */
    padding: 1vmin; /* Exemplo usando vmin */
    font-family: 'Press Start 2P', cursive; /* Mantenha sua fonte */
}

#contador, #nivel, #nome-jogo {
    font-size: 2vmin; /* Exemplo */
    background-color: rgba(0, 0, 0, 0.5);
    padding: 0.5vmin 1vmin; /* Exemplo usando vmin */
    border-radius: 0.5vmin; /* Exemplo usando vmin */
    font-family: 'Press Start 2P', cursive; /* Mantenha sua fonte */
}

#game-controls {
    /* Assumindo que #game-controls é filho direto do #game-container ou de um elemento que preenche o #game-container */
    position: absolute; /* Posicionado absolutamente em relação ao container pai */
    bottom: 2%; /* % da altura do container pai (#game-container) */
    left: 5%; /* % da largura do container pai */
    right: 5%; /* % da largura do container pai */
    display: flex;
    justify-content: space-around;
    z-index: 820; /* Garante que fique acima do jogo principal */
    padding: 1vmin; /* Use vmin para padding */
    /*font-family já está ok */
}

#game-controls button {
    flex-grow: 1;
    margin: 0 1%; /* Percentagem para margem */
    padding: 1vmin 0; /* vmin para padding */
    font-size: 1.8vmin; /* Exemplo */
    font-family: 'SuaNovaFonte', sans-serif; /* ou a fonte correta */
    background-color: #9fb733;
    color: rgb(4, 4, 4);
    border: none;
    border-radius: 0.5vmin; /* vmin para border-radius */
    cursor: pointer;
    text-align: center;
    /* max-width: 150px; */ /* Pode remover ou usar vw/vmin para permitir que o botão diminua mais */
    max-width: 15vmin; /* Exemplo */
    /* Se os botões ficarem muito grandes/pequenos, ajuste esta ou remova */
}

#game-controls button:hover {
    background-color: #286090; /* Mantenha o hover */
}

/* Outros estilos gerais ou para elementos específicos que não afetam o layout principal */
.img {
    max-width: 100%;
    height: auto; /* Para manter a proporção */
}

#tela-fim-de-fase img#imagem-fim-de-fase {
    display: block;
    margin-left: auto;
    margin-right: auto;
    max-width: 100%; /* Garante que não exceda a largura do pai */
    height: auto; /* Mantém a proporção */
}

/* ... (outros estilos de elementos internos ou animações) ... */
@keyframes expand {
    0% {
        transform: scale(0);
    }
    100% {
        transform: scale(1);
    }
}